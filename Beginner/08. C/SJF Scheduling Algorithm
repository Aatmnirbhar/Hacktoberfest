// C program for implementation of SJF scheduling 
#include<stdio.h>
void findavgTime(int p[],int n,int bt[])
{
    int wt[20],tat[20],i,j,pos,temp;
    float avg_wt,avg_tat,total=0;
    for(i=0;i<n;i++)
    {
        pos=i;
        for(j=i+1;j<n;j++)
        {
            if(bt[j]<bt[pos])
                pos=j;
        }
        temp=bt[i];
        bt[i]=bt[pos];
        bt[pos]=temp;
        temp=p[i];
        p[i]=p[pos];
        p[pos]=temp;
    }
    wt[0]=0;            
    for(i=1;i<n;i++)
    {
        wt[i]=0;
        for(j=0;j<i;j++)
            wt[i]+=bt[j];
        total+=wt[i];
    }
    avg_wt=total/n;      
    total=0;
    printf("\nProcess\t    Burst Time    \tWaiting Time\tTurnaround Time");
    for(i=0;i<n;i++)
    {
        tat[i]=bt[i]+wt[i];     
        total+=tat[i];
        printf("\np%d\t\t  %d\t\t    %d\t\t\t%d",p[i],bt[i],wt[i],tat[i]);
    }
    avg_tat=total/n;    
    printf("\n\nAverage Waiting Time=%f",avg_wt);
    printf("\nAverage Turnaround Time=%f\n",avg_tat);
}
void main() 
{ 
	int processes[100],burst_time[100],n;
	printf("Enter number of processes : ");
	scanf("%d",&n);
	printf("Enter the burst time of each Process \n");
	for(int i=0;i<n;i++)
	{
	    processes[i]=i+1;
	    printf("Process %d : ",i+1);
	    scanf("%d",&burst_time[i]);
	}
	findavgTime(processes, n, burst_time); 
} 
